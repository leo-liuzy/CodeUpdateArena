{
    "api_path": "pandas.DataFrame.head",
    "arguments_str": "self,n:int=5",
    "doc_string": "Return the first `n` rows.\n\nThis function returns the first `n` rows for the object based\non position. It is useful for quickly testing if your object\nhas the right type of data in it.\n\nFor negative values of `n`, this function returns all rows except\nthe last `|n|` rows, equivalent to ``df[:n]``.\n\nIf n is larger than the number of rows, this function returns all rows.\n\nParameters\n----------\nn : int, default 5\n    Number of rows to select.\n\nReturns\n-------\nsame type as caller\n    The first `n` rows of the caller object.\n\nSee Also\n--------\nDataFrame.tail: Returns the last `n` rows.\n\nExamples\n--------\n>>> df = pd.DataFrame({'animal': ['alligator', 'bee', 'falcon', 'lion',\n...                    'monkey', 'parrot', 'shark', 'whale', 'zebra']})\n>>> df\n      animal\n0  alligator\n1        bee\n2     falcon\n3       lion\n4     monkey\n5     parrot\n6      shark\n7      whale\n8      zebra\n\nViewing the first 5 lines\n\n>>> df.head()\n      animal\n0  alligator\n1        bee\n2     falcon\n3       lion\n4     monkey\n\nViewing the first `n` lines (three in this case)\n\n>>> df.head(3)\n      animal\n0  alligator\n1        bee\n2     falcon\n\nFor negative values of `n`\n\n>>> df.head(-3)\n      animal\n0  alligator\n1        bee\n2     falcon\n3       lion\n4     monkey\n5     parrot",
    "imports": [
        "import pandas",
        "import pandas as pd",
        "import numpy",
        "import numpy as np",
        "from enum import Enum",
        "from typing import List, Union, Tuple, Dict",
        "from pandas._typing import Self"
    ],
    "return_type_hint": "-> Self",
    "source_code": "    @final\n    def head(self, n: int = 5) -> Self:\n        \"\"\"\n        Return the first `n` rows.\n\n        This function returns the first `n` rows for the object based\n        on position. It is useful for quickly testing if your object\n        has the right type of data in it.\n\n        For negative values of `n`, this function returns all rows except\n        the last `|n|` rows, equivalent to ``df[:n]``.\n\n        If n is larger than the number of rows, this function returns all rows.\n\n        Parameters\n        ----------\n        n : int, default 5\n            Number of rows to select.\n\n        Returns\n        -------\n        same type as caller\n            The first `n` rows of the caller object.\n\n        See Also\n        --------\n        DataFrame.tail: Returns the last `n` rows.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({'animal': ['alligator', 'bee', 'falcon', 'lion',\n        ...                    'monkey', 'parrot', 'shark', 'whale', 'zebra']})\n        >>> df\n              animal\n        0  alligator\n        1        bee\n        2     falcon\n        3       lion\n        4     monkey\n        5     parrot\n        6      shark\n        7      whale\n        8      zebra\n\n        Viewing the first 5 lines\n\n        >>> df.head()\n              animal\n        0  alligator\n        1        bee\n        2     falcon\n        3       lion\n        4     monkey\n\n        Viewing the first `n` lines (three in this case)\n\n        >>> df.head(3)\n              animal\n        0  alligator\n        1        bee\n        2     falcon\n\n        For negative values of `n`\n\n        >>> df.head(-3)\n              animal\n        0  alligator\n        1        bee\n        2     falcon\n        3       lion\n        4     monkey\n        5     parrot\n        \"\"\"\n        if using_copy_on_write():\n            return self.iloc[:n].copy()\n        return self.iloc[:n]\n",
    "summarized_doc": "The function `head(n)` is used to return the first `n` rows of an object based on position. This is ideal for quickly checking if an object contains the correct type of data.\n\nA negative `n` will return all rows except the last `|n|` rows, equivalent to `df[:n]`.\n\nIf the specified `n` exceeds the total number of rows, all rows will be returned.\n\nParameters:\n- `n`: This is an integer and by default, it's set to 5. This parameter specifies the number of rows to select.\n\nReturns:\nThe function will return the same type as caller, which is the first `n` rows of the given object.\n\nRefer to `DataFrame.tail` if you need to return the last `n` rows.\n\nHere is an example to illustrate how to use `head(n)`. \n\nFirst, create a DataFrame:\n```python\ndf = pd.DataFrame({'animal': ['alligator', 'bee', 'falcon', 'lion',\n                   'monkey', 'parrot', 'shark', 'whale', 'zebra']})\n```\nTo view the first 5 lines, use:\n```python\ndf.head()\n```\nTo view the first `n` lines, simply add an integer parameter `n`:\n```python\ndf.head(3)\n```\nTo use a negative value for `n`, use:\n```python\ndf.head(-3)\n```"
}